{"version":3,"sources":["webpack://creneauxMylittlepressing/../map-google-location/src/AppPopUpMap.vue?45a1","webpack://creneauxMylittlepressing/../map-google-location/src/AppPopUpMap.vue?e875","webpack://creneauxMylittlepressing/../map-google-location/src/components/mapgoogle.vue?6a35","webpack://creneauxMylittlepressing/../map-google-location/src/components/config.js","webpack://creneauxMylittlepressing/../map-google-location/src/components/mapgoogle.vue","webpack://creneauxMylittlepressing/../map-google-location/src/components/mapgoogle.vue?fc24","webpack://creneauxMylittlepressing/../map-google-location/src/components/mapgoogle.vue?e2d4","webpack://creneauxMylittlepressing/../map-google-location/src/AppPopUpMap.vue","webpack://creneauxMylittlepressing/../map-google-location/src/AppPopUpMap.vue?1036","webpack://creneauxMylittlepressing/../map-google-location/src/AppPopUpMap.vue?2850","webpack://creneauxMylittlepressing/../map-google-location/src/AppPopUpMap.vue?4a7e"],"names":["apiKey","GoogleObejct","createGoogleObject","loader","Loader","version","libraries","Promise","resolv","load","then","google","catch","e","console","log","extractPathForPolygon","geoString","geojson","JSON","parse","points","features","geometry","coordinates","i","point","push","lat","lng","convertNewLineToArray","string","serach","split","map","item","trim"],"mappings":"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,SAtCA,qBAsCA;AACA;AACA;AACA;AACA;AACA,wEACA,0CADA,GAEA,EAFA;AAGA,GA9CA;AA+CA;AACA,gBADA,0BACA;AACA;AACA,KAHA;AAIA,iBAJA,2BAIA;AACA;AACA,KANA;;AAOA;AACA;AACA;AACA,sBAVA,gCAUA;AAAA;;AACA;AACA;;AACA;;AACA;;AACA;AACA,OALA;AAMA,KAjBA;;AAkBA;AACA;AACA;AACA,YArBA,sBAqBA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAAA;AAAA,SADA;AAEA,0BAFA;AAGA;AAHA;AAMA,wEACA,KADA,EAEA,YAFA;AAIA,+CACA,YADA,EAEA,eAFA,EAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAZA;AAcA,KApDA;AAqDA,WArDA,qBAqDA;AACA;AACA;AACA,yBAHA,CAIA;;AACA,gDACA,0CADA,EAEA;AACA;AACA,2DAFA;AAGA;AACA,gBAJA;AAKA;AACA,2DANA;AAOA;AACA,6BARA;AASA;AACA,0BAVA;AAYA;AACA;AACA;AAFA,SAZA;AAiBA;AACA,gCAlBA;AAmBA,yBAnBA;AAoBA,yBApBA;AAqBA,gCArBA;AAsBA,gCAtBA;AAwBA;AACA;AACA;AAFA,SAxBA;AA4BA,iBACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BADA;AAEA,2CAFA;AAGA;AAAA;AAAA;AAHA,SArBA,EA0BA;AACA,0CADA;AAEA,iCAFA;AAGA;AAAA;AAAA;AAHA,SA1BA,EA+BA;AACA,2CADA;AAEA,iCAFA;AAGA;AAAA;AAAA;AAHA,SA/BA,EAoCA;AACA,6BADA;AAEA,iCAFA;AAGA;AAAA;AAAA;AAHA,SApCA,EAyCA;AACA,qCADA;AAEA,+BAFA;AAGA;AAAA;AAAA;AAHA,SAzCA;AA5BA,OAFA;AA+EA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,SATA,EASA,IATA;AAUA,OAXA;AAYA;AACA;AACA,KAxJA;AAyJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAjKA;AAkKA,oBAlKA,8BAkKA;AACA;AACA;AACA;AACA,KAtKA;AAuKA,0BAvKA,oCAuKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OANA;AAOA,KAjLA;AAkLA,aAlLA,uBAkLA;AACA;AACA;AACA;;AACA;AACA;AACA,yBANA,CAOA;;AACA;AACA;AAAA;AAAA;AAAA,SADA;AAEA,qBAFA;AAGA;AAHA;AAKA,KA/LA;AAgMA,4BAhMA,sCAgMA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CADA;AAEA,uCAFA;AAGA,iCAHA;AAIA;AAJA;AAMA;AACA,gDApBA,CAqBA;AACA;;AACA;AACA;AACA,SAFA,MAEA;AACA;;AACA;AACA;AACA;AACA;AACA,OA/BA,MA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA9OA;;AA+OA;AACA;AACA;AACA,gBAlPA,0BAkPA;AACA;AACA,0EADA;AAEA,sBAFA;AAGA,8BAHA;AAIA,0BAJA;AAKA,uBALA;AAMA,4BANA;AAOA;AAPA;AASA;AACA,KA7PA;AA8PA,kCA9PA,4CA8PA;AACA;;AACA,UACA,sDACA,MADA,EAEA,YAFA,CADA,EAKA;AACA;AACA,OAPA,MAOA;AACA;AACA;AACA,KA1QA;AA2QA,iCA3QA,2CA2QA;AAAA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,aAJA;AAKA;AACA;;AACA;AACA,OAbA,CADA,CAeA;;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA,KAxSA;;AAySA;AACA;AACA;AACA,8BA5SA,wCA4SA;AAAA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAJA;AAKA;AACA;;AACA;AACA,OAZA;;AAaA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA,KArUA;;AAsUA;AACA;AACA;AACA,yBAzUA,iCAyUA,KAzUA,EAyUA;AACA;AACA;;AACA;AACA;AACA;;AACA,cACA,oBACA,qCADA,IAEA,cAHA,EAIA;AACA;AACA;;AACA,cACA,oBACA,kCADA,IAEA,WAHA,EAIA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AAjWA;AA/CA,G;;AC3D2b,CAAgB,kHAAG,EAAC,C;;;;;ACAvX;AAC3B;AACL;;;AAGxD;AACkH;AAClH,gBAAgB,8CAAU;AAC1B,EAAE,4CAAM;AACR,EAAE,6CAAM;AACR,EAAE,sDAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,+D;;;;;;;;;;;;;;ACNf;AACA;AACA;AACA;AACA,qBADA;AAEA,iCAFA;AAGA;AACA;AACA,mBADA;AAEA;AAFA,KADA;AAKA;AACA,mBADA;AAEA;AAFA;AALA,GAHA;AAaA;AACA;AADA,GAbA;AAgBA,yDACA,iDADA,CAhBA;AAoBA;AACA,aADA,uBACA;AACA;AACA,KAHA;AAIA,mBAJA,2BAIA,CAJA,EAIA;AACA;AACA;AANA;AApBA,G;;ACf8a,CAAgB,+GAAG,EAAC,C;;;;;ACA5V;AACvC;AACL;AACsC;;;AAGhG;AAC+G;AAC/G,IAAI,qBAAS,GAAG,8CAAU;AAC1B,EAAE,uCAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,sGAAS,Q;;;;;;;;ACnBxB;AAAA;AAAA","file":"creneauxMylittlepressing.common.6.js","sourcesContent":["// extracted by mini-css-extract-plugin","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mapgoogle',{ref:\"mapgoogle\",attrs:{\"configs\":_vm.configs,\"etape-checkout\":_vm.etapeCheckout,\"action-after\":_vm.actionAfter},on:{\"update_location\":_vm.update_location}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('section',{staticClass:\"modal micromodal-slide\",attrs:{\"id\":\"map-popup-wbu\"}},[_c('div',{staticClass:\"modal__overlay\"},[_c('div',{staticClass:\"modal__container\",attrs:{\"role\":\"dialog\",\"aria-modal\":\"true\",\"aria-labelledby\":\"modal-1-title\"}},[_c('header',{staticClass:\"modal__header\"},[_c('h2',{staticClass:\"modal__title\",attrs:{\"id\":\"modal-1-title\"}},[_vm._v(\" \"+_vm._s(_vm.configs.titre_map.value)+\" \")]),_c('a',{staticClass:\"modal__close\",attrs:{\"href\":\"#\",\"rel\":\"modal:close\"},on:{\"click\":function($event){return _vm.micromodal.close('map-popup-wbu')}}})]),_c('main',{staticClass:\"modal__content\",attrs:{\"id\":\"modal-1-content\"}},[_c('div',{staticClass:\"m-0 p-0 container-map\"},[_c('div',{attrs:{\"id\":\"map-display-wbu\"}}),_c('div',{staticClass:\"text-over-lay\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.current_address),expression:\"current_address\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":_vm.placeholder,\"id\":\"map-input-over\"},domProps:{\"value\":(_vm.current_address)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.current_address=$event.target.value}}})]),_c('div',{staticClass:\"center-marker\"}),_c('div',{staticClass:\"address-confirm\"},[_c('button',{staticClass:\"btn btn-lg bg-cl1\",on:{\"click\":_vm.save_localisation_cookie}},[_vm._v(\" Confirmer l'adresse \")])])])])])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { Loader } from \"@googlemaps/js-api-loader\";\nexport default {\n  apiKey: \"AIzaSyDurloZ0-xj8CNrQwkeSc53A-_n35Xji2Y\",\n  GoogleObejct: null,\n  /**\n   * On charge la map\n   */\n  createGoogleObject() {\n    const loader = new Loader({\n      apiKey: this.apiKey,\n      version: \"weekly\",\n      libraries: [\"places\", \"geometry\"]\n    });\n    return new Promise(resolv => {\n      loader\n        .load()\n        .then(google => {\n          this.GoogleObejct = google;\n          resolv(google);\n        })\n        .catch(e => {\n          console.log(\"Erreur initialisation de la MAP : \", e);\n        });\n    });\n  },\n  extractPathForPolygon(geoString) {\n    const geojson = JSON.parse(geoString);\n    const points = [];\n    if (\n      geojson.features &&\n      geojson.features[0] &&\n      geojson.features[0].geometry &&\n      geojson.features[0].geometry.coordinates\n    ) {\n      for (const i in geojson.features[0].geometry.coordinates[0]) {\n        const point = geojson.features[0].geometry.coordinates[0][i];\n        points.push({ lat: point[1], lng: point[0] });\n      }\n    }\n    return points;\n  },\n  /**\n   * Permet de slpit and trim chaque elment;\n   * @param {*} string\n   */\n  convertNewLineToArray(string, serach = \"\\n\") {\n    return string.split(serach).map(item => item.trim());\n  }\n};\n","<!--\n    S'ouvre par defaut dans une popup.\n-->\n<template>\n  <div>\n    <!-- https://micromodal.vercel.app/ -->\n    <section class=\"modal micromodal-slide\" id=\"map-popup-wbu\">\n      <div class=\"modal__overlay\">\n        <div\n          class=\"modal__container\"\n          role=\"dialog\"\n          aria-modal=\"true\"\n          aria-labelledby=\"modal-1-title\"\n        >\n          <header class=\"modal__header\">\n            <h2 class=\"modal__title\" id=\"modal-1-title\">\n              {{ configs.titre_map.value }}\n            </h2>\n\n            <a\n              href=\"#\"\n              class=\"modal__close\"\n              rel=\"modal:close\"\n              @click=\"micromodal.close('map-popup-wbu')\"\n            ></a>\n          </header>\n          <main class=\"modal__content\" id=\"modal-1-content\">\n            <div class=\"m-0 p-0 container-map\">\n              <div id=\"map-display-wbu\"></div>\n              <div class=\"text-over-lay\">\n                <input\n                  class=\"form-control\"\n                  type=\"text\"\n                  v-model=\"current_address\"\n                  :placeholder=\"placeholder\"\n                  id=\"map-input-over\"\n                />\n              </div>\n              <div class=\"center-marker\"></div>\n              <div class=\"address-confirm\">\n                <button\n                  class=\"btn btn-lg bg-cl1\"\n                  @click=\"save_localisation_cookie\"\n                >\n                  Confirmer l'adresse\n                </button>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport config from \"./config.js\";\nimport micromodal from \"micromodal\";\n\nexport default {\n  name: \"Mapgoogle\",\n  props: {\n    configs: {\n      type: Object,\n      required: true\n    },\n    displayMarker: { type: Boolean, default: true },\n    image: { type: String, default: \"/localisation/img/marker.png\" },\n    urlGood: { type: String, default: \"/cart\" },\n    urlBad: { type: String, default: \"/pages/map-error\" },\n    etapeCheckout: {\n      type: Boolean,\n      default: true\n    },\n    actionAfter: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      id_html: \"map-google-field\",\n      villes: config.convertNewLineToArray(this.configs.villes.value, \";\"),\n      list_box: config.convertNewLineToArray(this.configs.bps.value),\n      micromodal: micromodal,\n      map: null,\n      lat: 45.7941459,\n      lon: 4.68941940000002,\n      point_in_polygon: false,\n      point_in_ville: false,\n      point_in_box: false,\n      titre_popup: \"Merci de confirmer votre adresse\",\n      current_address: \"\",\n      valide_text: \"Commander maintenant\",\n      placeholder: \"Entrez votre adresse\"\n    };\n  },\n  mounted() {\n    this.point_in_box = false;\n    this.point_in_polygon = false;\n    this.point_in_ville = false;\n    this.createGoogleObject();\n    this.current_address = this.$store.state.location.current_address\n      ? this.$store.state.location.current_address\n      : \"\";\n  },\n  methods: {\n    openPopupMap() {\n      this.micromodal.show(\"map-popup-wbu\");\n    },\n    closePopupMap() {\n      this.micromodal.close(\"map-popup-wbu\");\n    },\n    /**\n     * On charge la map\n     */\n    createGoogleObject() {\n      config.createGoogleObject().then(google => {\n        this.GoogleObejct = google;\n        this.getPlace();\n        this.initMap();\n        this.geocoder = new this.GoogleObejct.maps.Geocoder();\n      });\n    },\n    /**\n     * Permet d'ajouter la recherche de ville sur le champs qui est rattaché.\n     */\n    getPlace() {\n      var self = this;\n      /**\n       * Pour obtenir les coordonnées\n       * https://www.mapcoordinates.net/fr\n       */\n      var input = document.querySelector(\"#map-input-over\");\n      this.options = {\n        componentRestrictions: { country: [\"fr\"] },\n        types: [\"address\"],\n        strictBounds: true\n      };\n\n      const autocomplete = new this.GoogleObejct.maps.places.Autocomplete(\n        input,\n        this.options\n      );\n      this.GoogleObejct.maps.event.addListener(\n        autocomplete,\n        \"place_changed\",\n        function() {\n          var place = autocomplete.getPlace();\n\n          if (place && place.formatted_address) {\n            self.current_address = place.formatted_address;\n            self.city_on_map = place.vicinity;\n            self.updateMap(place);\n            self.openPopupMap();\n          }\n        }\n      );\n    },\n    initMap() {\n      var self = this;\n      var lat = this.lat;\n      var lon = this.lon;\n      // CrÃ©er l'objet \"map\" et l'insÃ¨rer dans l'Ã©lÃ©ment HTML qui a l'ID \"map\"\n      this.map = new this.GoogleObejct.maps.Map(\n        document.getElementById(\"map-display-wbu\"),\n        {\n          // Nous plaÃ§ons le centre de la carte avec les coordonnÃ©es ci-dessus\n          center: new this.GoogleObejct.maps.LatLng(lat, lon),\n          // Nous dÃ©finissons le zoom par dÃ©faut\n          zoom: 17,\n          // Nous dÃ©finissons le type de carte (ici carte routiÃ¨re)\n          mapTypeId: this.GoogleObejct.maps.MapTypeId.ROADMAP,\n          // Nous activons les options de contrÃ´le de la carte (plan, satellite...)\n          mapTypeControl: false,\n          // Nous dÃ©sactivons la roulette de souris\n          scrollwheel: false,\n\n          mapTypeControlOptions: {\n            // Cette option sert Ã  dÃ©finir comment les options se placent\n            style: this.GoogleObejct.maps.MapTypeControlStyle.HORIZONTAL_BAR\n          },\n\n          // Activation des options de navigation dans la carte (zoom...)\n          navigationControl: false,\n          panControl: false,\n          zoomControl: true,\n          streetViewControl: false,\n          fullscreenControl: false,\n\n          navigationControlOptions: {\n            // Comment ces options doivent-elles s'afficher\n            style: this.GoogleObejct.maps.NavigationControlStyle.ZOOM_PAN\n          },\n          styles: [\n            //desactive les localisations.\n            /*\n          \t{\n              featureType: 'poi',\n              elementType: 'labels.icon',\n              stylers: [\n                {visibility: 'off'}\n              ]\n            },\n            */\n            // couleur du texte.\n            /*\n          \t{\n              featureType: 'poi',\n              elementType: 'labels.text.fill',\n              stylers: [\n              \t{color: '#ffffff'}\n              ]\n            },\n            */\n            {\n              featureType: \"poi\",\n              elementType: \"labels.text.stroke\",\n              stylers: [{ visibility: \"off\" }]\n            },\n            {\n              featureType: \"landscape.natural\",\n              elementType: \"geometry\",\n              stylers: [{ color: \"#b8cb92\" }]\n            },\n            {\n              featureType: \"landscape.man_made\",\n              elementType: \"geometry\",\n              stylers: [{ color: \"#ece2d9\" }]\n            },\n            {\n              featureType: \"road\",\n              elementType: \"geometry\",\n              stylers: [{ color: \"#ffffff\" }]\n            },\n            {\n              featureType: \"road.highway\",\n              elementType: \"labels\",\n              stylers: [{ visibility: \"off\" }]\n            }\n          ]\n        }\n      );\n      this.setMarker();\n      this.map.addListener(\"dragend\", function() {\n        window.setTimeout(function() {\n          var centerPosition = self.map.getCenter();\n          if (centerPosition) {\n            self.lat = centerPosition.lat();\n            self.lon = centerPosition.lng();\n            self.city_on_map = \"\";\n\n            self.obtenir_address_proche();\n          }\n        }, 1000);\n      });\n      this.buildpolygon();\n      this.valide_selection();\n    },\n    updateMap: function(place) {\n      if (place.geometry) {\n        this.map.panTo(place.geometry.location);\n        this.lat = place.geometry.location.lat();\n        this.lon = place.geometry.location.lng();\n        this.setMarker();\n        this.valide_selection();\n      }\n    },\n    valide_selection() {\n      this.check_if_new_adress_in_polygon();\n      this.check_if_new_adress_in_villes();\n      this.check_if_new_adress_in_box();\n    },\n    obtenir_address_proche() {\n      var self = this;\n      var latlng = new this.GoogleObejct.maps.LatLng(this.lat, this.lon);\n      this.geocoder.geocode({ location: latlng }, function(results, status) {\n        if (status == \"OK\") {\n          self.current_address = results[0].formatted_address;\n          self.updateMap(results[0]);\n          self.getNameVilleFromPlace(results[0]);\n        }\n      });\n    },\n    setMarker() {\n      if (!this.displayMarker) {\n        return false;\n      }\n      var self = this;\n      var lat = this.lat;\n      var lon = this.lon;\n      // Nous ajoutons un marqueur\n      this.marker = new this.GoogleObejct.maps.Marker({\n        position: { lat: lat, lng: lon },\n        map: self.map,\n        icon: this.image\n      });\n    },\n    save_localisation_cookie() {\n      if (this.current_address == \"\") {\n        //localStorage.removeItem(\"wbu_localisation_map\");\n        this.$store.dispatch(\"setLocation\", \"\");\n        alert(\"Vous devez definir une adresse\");\n        return false;\n      }\n      if (this.point_in_polygon && this.point_in_ville && this.point_in_box) {\n        /*\n        localStorage.setItem(\n          \"wbu_localisation_map\",\n          JSON.stringify(this.current_address)\n        );\n        localStorage.setItem(\n          \"wbu_localisation_city\",\n          JSON.stringify(this.city_on_map)\n        );\n        localStorage.setItem(\"wbu_locality\", this.locality);\n        localStorage.setItem(\"wbu_route\", this.route);\n        /** */\n        const location = {\n          current_address: this.current_address,\n          city_on_map: this.city_on_map,\n          locality: this.locality,\n          route: this.route\n        };\n        this.$store.dispatch(\"setLocation\", location);\n        this.$emit(\"update_location\", location);\n        // IMPORTANT;\n        //$(document).trigger(\"adresseUpdate\");\n        if (this.etapeCheckout) {\n          window.location.href = this.urlGood;\n        } else {\n          document.querySelector(\".modal__close\").click();\n          if (this.actionAfter) {\n            document.querySelector(\".button.cart-checkout-custom\").click();\n          }\n        }\n      } else {\n        //localStorage.removeItem(\"wbu_localisation_map\");\n        //localStorage.removeItem(\"wbu_localisation_city\");\n        // IMPORANT;\n        //$(document).trigger(\"adresseUpdate\");\n        this.$store.dispatch(\"setLocation\", \"\");\n        window.location.href = this.urlBad;\n      }\n    },\n    /**\n     * -\n     */\n    buildpolygon() {\n      this.polygon = new this.GoogleObejct.maps.Polygon({\n        path: config.extractPathForPolygon(this.configs.zone_valide.value),\n        geodesic: true,\n        strokeColor: \"#48a0d9\",\n        strokeOpacity: 0.5,\n        strokeWeight: 4,\n        fillColor: \"#48a0d9\",\n        fillOpacity: 0.15\n      });\n      this.polygon.setMap(this.map);\n    },\n    check_if_new_adress_in_polygon() {\n      var latLng = new this.GoogleObejct.maps.LatLng(this.lat, this.lon);\n      if (\n        this.GoogleObejct.maps.geometry.poly.containsLocation(\n          latLng,\n          this.polygon\n        )\n      ) {\n        this.point_in_polygon = true;\n      } else {\n        this.point_in_polygon = false;\n      }\n    },\n    check_if_new_adress_in_villes() {\n      const ville_in_name = () => {\n        var view = false;\n        if (this.current_address && this.current_address.length > 0) {\n          var ar_ville = this.current_address.split(\",\");\n          if (ar_ville[1].length > 0) {\n            this.villes.forEach(ville => {\n              if (ar_ville[1].indexOf(ville) >= 0) {\n                view = true;\n              }\n            });\n          }\n        }\n        return view;\n      };\n      //Check if is valide\n      if (this.type_limitation != \"polygon_ville\") {\n        this.point_in_ville = true;\n        return false;\n      }\n      if (this.villes.indexOf(this.city_on_map) >= 0) {\n        this.point_in_ville = true;\n        return true;\n      } else if (ville_in_name()) {\n        this.point_in_ville = true;\n        return true;\n      } else {\n        this.point_in_ville = false;\n      }\n    },\n    /**\n     * -\n     */\n    check_if_new_adress_in_box() {\n      const ville_in_box = () => {\n        var view = false;\n        if (this.current_address && this.current_address.length > 0) {\n          if (this.current_address) {\n            this.list_box.forEach(box => {\n              if (this.current_address.indexOf(box) >= 0) {\n                view = true;\n              }\n            });\n          }\n        }\n        return view;\n      };\n      if (this.type_limitation != \"polygon_box\") {\n        this.point_in_box = true;\n        return false;\n      }\n      if (ville_in_box()) {\n        this.point_in_box = true;\n        return true;\n      } else {\n        this.point_in_box = false;\n        return true;\n      }\n    },\n    /**\n     * -\n     */\n    getNameVilleFromPlace(place) {\n      var route = \"\";\n      var locality = \"\";\n      if (place.address_components) {\n        for (const i in place.address_components) {\n          var components = place.address_components[i];\n          if (\n            components.types &&\n            components.types.includes(\"locality\") &&\n            locality == \"\"\n          ) {\n            locality = components.long_name;\n          }\n          if (\n            components.types &&\n            components.types.includes(\"route\") &&\n            route == \"\"\n          ) {\n            route = components.long_name;\n          }\n        }\n        this.route = route;\n        this.locality = locality;\n      }\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../creneaux-reservation/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../creneaux-reservation/node_modules/thread-loader/dist/cjs.js!../../../creneaux-reservation/node_modules/babel-loader/lib/index.js!../../../creneaux-reservation/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../creneaux-reservation/node_modules/vue-loader/lib/index.js??vue-loader-options!./mapgoogle.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../creneaux-reservation/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../creneaux-reservation/node_modules/thread-loader/dist/cjs.js!../../../creneaux-reservation/node_modules/babel-loader/lib/index.js!../../../creneaux-reservation/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../creneaux-reservation/node_modules/vue-loader/lib/index.js??vue-loader-options!./mapgoogle.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./mapgoogle.vue?vue&type=template&id=b2168960&\"\nimport script from \"./mapgoogle.vue?vue&type=script&lang=js&\"\nexport * from \"./mapgoogle.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../creneaux-reservation/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <mapgoogle\n    ref=\"mapgoogle\"\n    :configs=\"configs\"\n    :etape-checkout=\"etapeCheckout\"\n    :action-after=\"actionAfter\"\n    @update_location=\"update_location\"\n  >\n  </mapgoogle>\n</template>\n\n<script>\nimport store from \"./store\";\nimport { mapState } from \"vuex\";\nimport mapgoogle from \"./components/mapgoogle.vue\";\nexport default {\n  name: \"AppPopUpMap\",\n  store,\n  props: {\n    etapeCheckout: {\n      type: Boolean,\n      required: true\n    },\n    actionAfter: {\n      type: Boolean,\n      required: true\n    }\n  },\n  components: {\n    mapgoogle\n  },\n  computed: {\n    ...mapState([\"configs\"])\n  },\n\n  methods: {\n    openModal() {\n      this.$refs.mapgoogle.openPopupMap();\n    },\n    update_location(l) {\n      this.$emit(\"update_location\", l);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"./components/scss/micromodal.scss\";\n</style>\n","import mod from \"-!../../creneaux-reservation/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../creneaux-reservation/node_modules/thread-loader/dist/cjs.js!../../creneaux-reservation/node_modules/babel-loader/lib/index.js!../../creneaux-reservation/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../creneaux-reservation/node_modules/vue-loader/lib/index.js??vue-loader-options!./AppPopUpMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../creneaux-reservation/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../creneaux-reservation/node_modules/thread-loader/dist/cjs.js!../../creneaux-reservation/node_modules/babel-loader/lib/index.js!../../creneaux-reservation/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../creneaux-reservation/node_modules/vue-loader/lib/index.js??vue-loader-options!./AppPopUpMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AppPopUpMap.vue?vue&type=template&id=6b7adad7&scoped=true&\"\nimport script from \"./AppPopUpMap.vue?vue&type=script&lang=js&\"\nexport * from \"./AppPopUpMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AppPopUpMap.vue?vue&type=style&index=0&id=6b7adad7&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../creneaux-reservation/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6b7adad7\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../creneaux-reservation/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../creneaux-reservation/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../creneaux-reservation/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../creneaux-reservation/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../creneaux-reservation/node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../creneaux-reservation/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../creneaux-reservation/node_modules/vue-loader/lib/index.js??vue-loader-options!./AppPopUpMap.vue?vue&type=style&index=0&id=6b7adad7&lang=scss&scoped=true&\""],"sourceRoot":""}